generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Quiz {
  id         String       @id @default(cuid())
  subject    Subject
  questions  Question[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Question {
  id         String       @id @default(cuid())
  content    String
  points     Int          @default(5)
  options    Option[]
  quizId     String
  quiz       Quiz         @relation(fields: [quizId], references: [id], onDelete: Cascade)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Option {
  id         String       @id @default(cuid())
  content    String
  isCorrect  Boolean      @default(false)
  questionId String
  question   Question     @relation(fields: [questionId], references: [id], onDelete: Cascade)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Flashcard {
  id         String       @id @default(cuid())
  question   String
  answer     String
  subject    Subject
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Task {
  id          String       @id @default(cuid())
  title       String
  description String?
  subject     Subject      // Added subject field
  completed   Boolean      @default(false)
  timeEntries TimeEntry[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model TimeEntry {
  id        String       @id @default(cuid())
  startTime DateTime
  endTime   DateTime?
  taskId    String
  task      Task         @relation(fields: [taskId], references: [id], onDelete: Cascade)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

enum Subject {
  PHYSICS
  CHEMISTRY
  MATHEMATICS
}